"0","p <- ggdata_clean %>% 
  filter(x_chr%in%c(1, 2)) %>% 
  mutate(
    id = paste0(RSID, ""_"", parameter),
    y_reveal = abs(y_pval)
  ) %>% 
  # filter(y_reveal>4) %>% 
  ggplot(aes(x = x_pos, y = y_pval, colour = colour)) +
    geom_point(size = 1.5, shape = 21, na.rm = TRUE, show.legend = FALSE) +
    scale_colour_manual(
      values = c(
        rep(viridis_pal(begin = 1/4, end = 3/4)(2), 11),
        rev(rep(viridis_pal(begin = 1/4, end = 3/4)(2), 11))
      )
    ) +
    scale_x_continuous(
      breaks = x_breaks[[""x_med""]],
      labels = x_breaks[[""x_chr""]],
      limits = range(ggdata_clean[[""x_pos""]]),
      expand = c(0.01, 0)
    ) +
    geom_hline(yintercept = 0, linetype = 1, colour = ""white"") +
    theme(
      panel.grid.minor.y = element_blank(),
      panel.grid.major.x = element_blank(),
      panel.grid.minor.x = element_blank(),
      panel.spacing.y = unit(0, ""in""),
      strip.text.y = element_text(colour = ""white"", angle = 0, size = rel(2)), 
      axis.text.x = element_text(size = rel(0.5)),
      legend.position = ""none""
    ) +
    labs(x = ""Chromosome"", y = ""P-Value"") +
    scale_y_continuous(
      expand = c(0, 0), # expand_scale(add = c(5, 5)), 
      limits = c(-10, 30),
      breaks = c(-10, -5, 0, 5, 10, 15, 20, 25, 30),
      labels = function(x) {
        parse(
          text = ifelse(x==0, ""1"", paste0(""10^-"", abs(x)))
        )
      }
    ) +
    annotate(
      geom = ""text"",
      x = rep(max(ggdata_clean$x_pos)*0.99, 2), 
      y = c(min(ggdata_clean$y_pval)-2.5, max(ggdata_clean$y_pval)+2.5), 
      label = c(expression(alpha), expression(gamma)),
      # fill = ""white"",
      colour = ""white"", #""grey20""
      size = 4
    ) +
    geom_point(
      data = ggdata_clean %>% 
        filter(!is.na(label)) %>% 
        mutate(
          id = paste0(RSID, ""_"", parameter), 
          y_reveal = 30 + abs(y_pval)
        ),
      size = 1.5,
      shape = 21,
      show.legend = FALSE,
      colour = viridis_pal(begin = 1, end = 1)(1)
    ) +
    geom_label_repel(
      data = ggdata_clean %>% 
        filter(parameter==""gamma"") %>% 
        filter(!is.na(label_repel)) %>% 
        mutate(
          id = paste0(RSID, ""_"", parameter), 
          y_reveal = 60
        ),
      mapping = aes(label = label_repel), 
      fill = ""grey20"",
      colour = viridis_pal(begin = 1, end = 1)(1), 
      segment.colour = viridis_pal(begin = 1, end = 1)(1),
      min.segment.length = unit(0, ""lines""),
      nudge_y = 2,
      na.rm = TRUE
    ) +
    geom_label_repel(
      data = ggdata_clean %>% 
        filter(parameter==""alpha"") %>% 
        filter(!is.na(label_repel)) %>%
        mutate(
          id = paste0(RSID, ""_"", parameter), 
          y_reveal = 60
        ),
      mapping = aes(label = label_repel), 
      fill = ""grey20"",
      colour = viridis_pal(begin = 1, end = 1)(1), 
      segment.colour = viridis_pal(begin = 1, end = 1)(1),
      min.segment.length = unit(0, ""lines""),
      nudge_y = -2,
      na.rm = TRUE
    ) +
    transition_reveal(id = id, along = y_revealkeep_last = TRUE)
"
"2","Error: unexpected '=' in:
""    ) +
    transition_reveal(id = id, along = y_revealkeep_last =""
"
